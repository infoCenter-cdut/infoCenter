考虑每次传回的数据为
{
    data1:{
        id:number, //默认数据排序
        type:string, //数据展示类型，为bar:柱状图, line:折线图, pie:饼状图
        tooltip:string //数据展示的额外配置
        time:y-m-d, //数据的存入时间，方便后台查询
        legend:string, //图例
        data:[], //数据
        axis:[], //x轴的内容
        smooth:bool, //当type=line时候，这一行才有效，True表示光滑曲线，False表示折线
        radius:string //饼状图半径大小，如果为1x2的向量(EX:['30%','70%']，表示中心空洞大小为30%，半径为70%的图)，则会生成空心饼状图
    }
}

方案一：
    data与axis的储存方式以txt文本为主，储存的格式以指定的格式来储存，每一个txt文本只存放一个数据。
    EX：(以{start data end}格式储存)
        20181011柱状图数据.txt-->
            {
                start [1,2,3,5,6] end
            }
        20181011柱状图横坐标数据.txt-->
            {
                start [阴天, 晴天, 阵雨天, 暴雨天, 大风天] end
            }
    该方案的难点在于读取数据时候需要考虑文件流的编码(gb2312, utf8...)，同时需要通过正则匹配('start (.*?) end')来进行数据的获取
    该方案的优点在于数据储存时候方便，任何部门的人员都可以直接进行操作。

方案二：
    data与axis的储存方式以字符串类型为主，储存格式以指定的格式来储存，直接通过admin后台管理来进行数据录入操作
    EX:
        柱状图数据：
            data: 1 2 3 4 5 6
            axis: 阴天 晴天 阵雨天 暴雨天 大风天
        折线图数据：
            data: 1 2 3 4 5 6
            axis: 阴天 晴天 阵雨天 暴雨天 大风天
        饼状图数据：
            data:{30,专科} {50, 本科} {20,硕士} {10,博士}
    该方案的难点在于需要技术部专门的人员来录入数据，
    该方案的有点在于储存方便，读取方便，以API接口提供数据时，前端也方便解析，没有编码和解析格式的问题。